// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trecom.Api.Services.Catalog.Persistance.EntityFramework;

#nullable disable

namespace Trecom.Api.Services.Catalog.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230731150144_SeedBaseCategories")]
    partial class SeedBaseCategories
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BrandSupplier", b =>
                {
                    b.Property<Guid>("BrandsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SuppliersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BrandsId", "SuppliersId");

                    b.HasIndex("SuppliersId");

                    b.ToTable("BrandSupplier", (string)null);
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.BaseCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifyDate");

                    b.HasKey("Id");

                    b.ToTable("BaseCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("68dddf99-f84c-4b89-9304-c9e8f35d4ac6"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4663),
                            IsActive = true,
                            Name = "Animals & Pet Supplies"
                        },
                        new
                        {
                            Id = new Guid("cbde1b95-c5b1-4891-83cb-754dfc4d2809"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4675),
                            IsActive = true,
                            Name = "Apparel & Accessories"
                        },
                        new
                        {
                            Id = new Guid("7c6e3ac7-6e4d-498e-b2d9-5cdfdf6e90b5"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4676),
                            IsActive = true,
                            Name = "Arts & Entertainment"
                        },
                        new
                        {
                            Id = new Guid("cc9e5a92-233e-432d-8e86-dfbbf505e85e"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4677),
                            IsActive = true,
                            Name = "Baby & Toddler"
                        },
                        new
                        {
                            Id = new Guid("ef124dcd-8ced-4ad7-8a4c-18c5753e57ca"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4678),
                            IsActive = true,
                            Name = "Business & Industrial"
                        },
                        new
                        {
                            Id = new Guid("437681c8-3f9d-4825-af8a-82dfa337883e"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4679),
                            IsActive = true,
                            Name = "Cameras & Optics"
                        },
                        new
                        {
                            Id = new Guid("095db9b1-4e8d-4c88-9c7e-492213fb7e67"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4690),
                            IsActive = true,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("27d3359d-39cc-48ab-a131-fd53009dc91d"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4691),
                            IsActive = true,
                            Name = "Food, Beverages & Tobacco"
                        },
                        new
                        {
                            Id = new Guid("8a2599dc-7c66-4302-a612-18b2c825ccee"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4692),
                            IsActive = true,
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = new Guid("1bf94232-9dd6-4fe1-9c7d-7b99c4e35e81"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4693),
                            IsActive = true,
                            Name = "Hardware"
                        },
                        new
                        {
                            Id = new Guid("f8188859-604b-47e0-93df-93106532cbf9"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4694),
                            IsActive = true,
                            Name = "Health & Beauty"
                        },
                        new
                        {
                            Id = new Guid("cdc8a989-c128-4a00-8f4d-c47fa5d2ed5d"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4695),
                            IsActive = true,
                            Name = "Home & Garden"
                        },
                        new
                        {
                            Id = new Guid("57c65f10-53b5-45f1-90e7-aa91079aed4b"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4696),
                            IsActive = true,
                            Name = "Mature"
                        },
                        new
                        {
                            Id = new Guid("dd60d192-2712-4e9e-9ac8-3a75362b6aff"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4697),
                            IsActive = true,
                            Name = "Office Supplies"
                        },
                        new
                        {
                            Id = new Guid("52698c6c-c5cc-4a39-9000-28ce5fa267ef"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4700),
                            IsActive = true,
                            Name = "Software"
                        },
                        new
                        {
                            Id = new Guid("d71545e7-d41f-48dc-8bbb-c6ab9c7126e5"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4701),
                            IsActive = true,
                            Name = "Sporting Goods"
                        },
                        new
                        {
                            Id = new Guid("914ee5fb-2807-424a-ba70-5848b72d95fb"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4702),
                            IsActive = true,
                            Name = "Toys & Games"
                        },
                        new
                        {
                            Id = new Guid("4afe2c20-f9e0-4f77-9869-4f8cbbe7c250"),
                            CreatedDate = new DateTime(2023, 7, 31, 18, 1, 44, 632, DateTimeKind.Local).AddTicks(4703),
                            IsActive = true,
                            Name = "Vehicles & Parts"
                        });
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifyDate");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BodyType")
                        .HasColumnType("int");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Color")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NAME");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PICURL");

                    b.Property<Guid>("SpecificCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifyDate");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("SpecificCategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.SpecificCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("TypeCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifyDate");

                    b.HasKey("Id");

                    b.HasIndex("TypeCategoryId");

                    b.ToTable("SpecificCategories");
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BillStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifyDate");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.TypeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BaseCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifyDate");

                    b.HasKey("Id");

                    b.HasIndex("BaseCategoryId");

                    b.ToTable("TypeCategories");
                });

            modelBuilder.Entity("BrandSupplier", b =>
                {
                    b.HasOne("Trecom.Api.Services.Catalog.Models.Entities.Brand", null)
                        .WithMany()
                        .HasForeignKey("BrandsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trecom.Api.Services.Catalog.Models.Entities.Supplier", null)
                        .WithMany()
                        .HasForeignKey("SuppliersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.Product", b =>
                {
                    b.HasOne("Trecom.Api.Services.Catalog.Models.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("Trecom.Api.Services.Catalog.Models.Entities.SpecificCategory", "SpecificCategory")
                        .WithMany("Products")
                        .HasForeignKey("SpecificCategoryId");

                    b.HasOne("Trecom.Api.Services.Catalog.Models.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId");

                    b.Navigation("Brand");

                    b.Navigation("SpecificCategory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.SpecificCategory", b =>
                {
                    b.HasOne("Trecom.Api.Services.Catalog.Models.Entities.TypeCategory", "TypeCategory")
                        .WithMany("SpecificCategories")
                        .HasForeignKey("TypeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeCategory");
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.Supplier", b =>
                {
                    b.OwnsOne("Trecom.Api.Services.Catalog.Models.Entities.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("SupplierId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SupplierId");

                            b1.ToTable("Suppliers");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.TypeCategory", b =>
                {
                    b.HasOne("Trecom.Api.Services.Catalog.Models.Entities.BaseCategory", "BaseCategory")
                        .WithMany("TypeCategories")
                        .HasForeignKey("BaseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseCategory");
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.BaseCategory", b =>
                {
                    b.Navigation("TypeCategories");
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.SpecificCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Trecom.Api.Services.Catalog.Models.Entities.TypeCategory", b =>
                {
                    b.Navigation("SpecificCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
